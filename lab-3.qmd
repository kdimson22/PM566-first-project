---
title: "Lab 03 - Exploratory Data Analysis"
author: "Kendall Dimson"
format: html
embed-resources: true
fig-width: 3
fig-height: 3
---

# 1. Read in the data

First download and then read in with `data.table::fread()`. This is slightly faster than some of the more common functions, such as `read.table`, but it produces a different type of object, which is why we need to convert it into a `data.frame` after reading it in.

```{r, load-libraries}
library(dplyr)
library(readr)
library(leaflet)
```

```{r, echo=TRUE, message=FALSE}
download.file(
  "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
  destfile = file.path("~", "Downloads", "met_all.gz"),
  method   = "libcurl",
  timeout  = 60
)

met <- data.table::fread(file.path("~", "Downloads", "met_all.gz"))
met <- as.data.frame(met)
```

# 2. Check the dimensions, headers, footers.

### **How many columns, rows are there? Some useful functions for this are `dim`, `head`, and `tail`.**

```{r}
dim(met)
```

2371775 rows, 30 columns \# 3. Take a look at the variables.

### **Show the type (class) of each variable (hint: try the `str` function).**

```{r}
str(met)


```

### **What are the names of the key variables related to our question of interest?**

The key variables are named elev (elevation), wind.sp (wind speed), and temp (temperature), hour and day

# 4. Take a closer look at the key variables.

```{r}
table(met$year)
table(met$day)
table(met$hour)
summary(met$temp)
summary(met$elev)
summary(met$wind.sp)
```

It looks like the elevation variable has observations with 9999.0, which is probably an indicator for missing. We should take a deeper look at the [data dictionary](https://github.com/USCbiostats/data-science-data/blob/master/02_met/met-datadictionary.pdf) to confirm. The wind speed variable is OK but there is a lot of missing data.

After checking the data we should make the appropriate modifications. Replace elevations with 9999 as `NA`.

```{r}
met[met$elev==9999.0, ] <- NA
summary(met$elev)
```

### **At what elevation is the highest weather station?**

The highest weather station is at an elevation of 4113.

We also have the issue of the minimum temperature being -40C, which seems implausible, so we should remove those observations.

```{r}
met <- met[met$temp > -40, ]
head(met[order(met$temp), ])
```

There are still some suspiciously low values for temperature (-17.2C), but we will deal with those later.

We should also check the wind speed variable for any abnormalities.

### **How many missing values are there in the `wind.sp` variable?**

```{r}
summary(met$wind.sp)
```

In the 'wind.sp' var, there are 91,853 missing values.

# 5. Check the data against an external data source.

We should check the suspicious temperature value (where is it located?) and validate that the range of elevations make sense (-13m to 4113m).

Google is your friend here.

Fix any problems that arise in your checks.

### **Where was the location for the coldest temperature readings (-17.2C)? Do these seem reasonable in context?**

```{r}
met <- met[met$temp > -40, ]
head(met[order(met$temp), ])
```

The coldest temperature readings is at USAFID 722817, which is outside of Colorado Springs. It may seem reasonable if that area is colder in wintertime with elevation 1838. But I am unsure. \### **Does the range of values for elevation make sense? Why or why not?**

```{r}
summary(met$elev)
```

No, range of values for elevation doesn't make sense because you can't have negative elevation values (that would be below sea level). So it would make sense to subset the dataset so that it is above zero for elevation.

met \<- met\[met\$temp \> -40, \]

```{r}
met <- met[met$elev > 0, ]
summary(met$elev)
```

# 6. Calculate summary statistics

Remember to keep the initial question in mind. We want to pick out the weather station with maximum elevation and examine its wind speed and temperature.

Some ideas: select the weather station with maximum elevation; look at the correlation between temperature and wind speed; look at the correlation between temperature and wind speed with hour and day of the month.

```{r}
elev <- met[which(met$elev == max(met$elev, na.rm = TRUE)), ]
summary(elev)
```

Note that to find the maximum elevation, we had to add `na.rm = TRUE`, because the elevation variable contains missing values. This is an example of how missing values can quickly propagate throughout an analysis (as the "maximum" of `1`, `2`, and `NA` is `NA`, because it cannot be defined).

Also note that we used the `which` function to tell us which elements of the logical comparison are `TRUE`. We did this because some of them were `NA`, which can lead to issues when subsetting by a logical variable.

```{r}
cor(elev$temp, elev$wind.sp, use="complete")
cor(elev$temp, elev$hour, use="complete")
cor(elev$wind.sp, elev$day, use="complete")
cor(elev$wind.sp, elev$hour, use="complete")
cor(elev$temp, elev$day, use="complete")
```

The `use="complete"` argument is another thing we added to avoid compounding `NA`s.

# 7. Exploratory graphs

We should look at the distributions of all of the key variables to make sure there are no remaining issues with the data.

### **Use the `hist` function to make histograms of the elevation, temperature, and wind speed variables for the whole dataset**

```{r}
hist (met$elev)

hist (met$temp)

hist (met$wind.sp)
```

One thing we should consider for later analyses is to log transform wind speed and elevation as they are very skewed.

Look at where the weather station with highest elevation is located.

```{r}
leaflet(elev) %>%
  addProviderTiles('OpenStreetMap') %>% 
  addCircles(lat=~lat,lng=~lon, opacity=1, fillOpacity=1, radius=100)
```

Look at the time series of temperature and wind speed at this location. For this we will need to create a date-time variable for the x-axis.

```{r message=FALSE}
library(lubridate)
elev$date <- with(elev, ymd_h(paste(year, month, day, hour, sep= ' ')))
summary(elev$date)
elev <- elev[order(elev$date), ]
head(elev)
```

With the date-time variable we can plot the time series of temperature and wind speed.

### **Use the `plot` function to make line graphs of temperature vs. date and wind speed vs. date**

```{r}
plot (met$day, met$temp)

plot(met$day, met$wind.sp)
```

### **Summarize any trends that you see in these time series plots.**

As days progress, there is almost a fluctuating pattern in temperature and wind speeds, with very few outliers. This trends on the time series plots likely shows the consistency of the data readings from the weather stations, as they record data daily.

# 8. Ask questions

By now, you might have some specific questions about how the data was gathered and what some of the different variables and values mean. Alternatively, maybe you have an idea for how some of the variable should be related and you want to explore that relationship. In a real-world analysis, these questions could potentially be answered by a collaborator, who may have been part of the team that collected the data.

### What questions do you have about the data?

If you haven't already, now would be a good time to look at the accompanying [data dictionary](https://github.com/USCbiostats/data-science-data/blob/master/02_met/met-datadictionary.pdf) for this dataset and see if it can answer any of your questions. If you have questions about the nature of the dataset and how it was gathered, this might be able to help.

### For questions about variables in the dataset or relationships between them, try making some more exploratory plots. Do you see the patterns you would expect?

There are many different types of summaries and visualization strategies that we have not discussed, but which could provide interesting perspectives on the data.

Some other useful plotting functions include: - `pairs` for making all pairwise scatter plots in a dataset with \>2 dimensions. - `heatmap` and/or `corrplot` (from the `corrplot` package) for visualizing matrices in general or correlation matrices in particular. - `image` a low-level matrix visualization function - `barplot`, especially with `table`, for visualizing frequencies of categorical variables.
